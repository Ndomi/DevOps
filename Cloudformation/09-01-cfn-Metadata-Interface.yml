AWSTemplateFormatVersion: "2010-09-09"
Description: Mapping demo

Parameters:
  MyKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select the keypair

  EnvironmentName:
    Description: Select the environment
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

Conditions:
  CreateDevSecurityGroup: !Equals [!Ref EnvironmentName, dev]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "EC2 Instance Configuration"
        Parameters:
          - InstanceType
          - KeyName
      - Label:
          default: "Environment Configuration"
        Parameters:
          - EnvironmentName
    ParametersLabels:
      EnvironmentName:
        default: "Which environment we are planning to create this instance?"
      KeyName:
        default: "Be aware that once keyname is selected we cannot change it, unless instance replaced"

Mappings:
  MyRegionMap:
    us-east-1:
      HVM64: ami-026b57f3c383c2eec
    eu-west-1:
      HVM64: ami-09e2d756e7d78558d
    af-south-1:
      HVM64: ami-09513eb71477f1d9b

  MyEnvironmentMap:
    dev:
      InstanceType: t2.micro
    prod:
      InstanceType: t2.small


Resources:
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: 
        Fn::FindInMap:
          - MyRegionMap
          - Ref: 'AWS::Region'
          - HVM64
      InstanceType: !FindInMap
        - MyEnvironmentMap
        - Ref: EnvironmentName
        - InstanceType
      KeyName: 
        Ref: MyKeyName
      SecurityGroups: !If [CreateDevSecurityGroup, [!Ref DevEnvSecurityGroup], [!Ref 'AWS::NoValue']]
                  
  DevEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDevSecurityGroup
    Properties:
      GroupDescription: DevSG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

Outputs:
  MyInstanceId:
    Description: My instance id
    Value: !Ref MyVMInstance
  MyDNSName:
    Description: My Public DNS Name
    Value: !GetAtt MyVMInstance.PublicDnsName
  MyInstanceAvailabilityZone:
    Description: Instance Availability Zone
    Value: !GetAtt MyVMInstance.AvailabilityZone
    Export:
      Name: !Sub "${AWS::StackName}-InstanceAz"
  MyDevGlobalSecurityGroup:
    Condition: CreateDevSecurityGroup
    Description: Me Dev SG
    Value: !Ref DevEnvSecurityGroup
    Export:
      Name: !Join ["-", [!Ref 'AWS::StackName', MyDevSSHGlobalSG]]