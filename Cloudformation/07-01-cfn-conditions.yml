AWSTemplateFormatVersion: "2010-09-09"
Description: Mapping demo

Parameters:
  MyKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select the keypair

  EnvironmentName:
    Description: Select the environment
    Type: String
    Default: dev]
    AllowedValues:
      - dev]
      - prod
      - qa

Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName, prod]
  CreateDevSecurityGroup: !Not [{Condition: CreateProdSecurityGroup}]
  CreateProdSecurityGroup: !Equals [!Ref EnvironmentName, prod] 

Mappings:
  MyRegionMap:
    us-east-1:
      HVM64: ami-026b57f3c383c2eec
    eu-west-1:
      HVM64: ami-09e2d756e7d78558d
    af-south-1:
      HVM64: ami-09513eb71477f1d9b

  MyEnvironmentMap:
    dev:
      InstanceType: t2.micro
    prod:
      InstanceType: t2.small
    qa:
      InstanceId: t2.medium


Resources:
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: 
        Fn::FindInMap:
          - MyRegionMap
          - Ref: 'AWS::Region'
          - HVM64
      InstanceType:
        Fn::FindInMap:]
          - MyEnvironmentMap
          - Ref: EnvironmentName
          - InstanceType
      KeyName: 
        Ref: MyKeyName
      SecurityGroups: !If [CreateDevSecurityGroup, [!Ref DevEnvSecurityGroup], [!Ref ProdEnvSecurityGroup]]

  MyProdEIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties:
      InstanceId:
        Ref: MyVMInstance
                  
  DevEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDevSecurityGroup
    Properties:
      GroupDescription: DevSG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  ProdEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateProdSecurityGroup
    Properties:
      GroupDescription: ProdSG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0