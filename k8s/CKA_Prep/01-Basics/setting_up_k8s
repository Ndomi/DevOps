Edit /etc/hosts

cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

sudo apt-get update && sudo apt-get install -y containerd

mkdir -p /etc/containerd

sudo containerd config default | sudo tee /etc/containerd/config.toml

sudo swapoff -a

vim /etc/fstab

sudo apt-get update && sudo apt-get install -y apt-transport-https curl

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

sudo apt-get update

sudo apt-get install -y kubelet=1.21.0-00 kubeadm=1.21.0-00 kubectl=1.21.0-00

sudo apt-mark hold kubelet kubeadm kubectl



# master Node
# ===========
sudo kubeadm init --pod-network-cidr 192.168.0.0/16 --kubernetes-version 1.21.0

	# Run as a normal user
	---------------------
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl get nodes  # STATUS --> NotReady

kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

kubectl get nodes  # STATUS --> Ready

kubeadm token create --print-join-command


# On Worker Nodes
# ===============

	# Run as root
kubeadm join 192.168.122.168:6443 --token 08flx1.n7dhx892q3y7w7gq --discovery-token-ca-cert-hash sha256:1405ce927c9bc3793bf46bcdeab4949ea8fb3ae4799a8c0b3f4debe7e6ac7ea7


	# on the master
	kubectl get nodes